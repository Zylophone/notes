* DONE [Blog] Heap vs Stack
* DONE [Blog] Data Structure vs Data Type
* QA [Blog] Transient vs Real Errors
  - A model to represent errors (MessageError - HIE)
* TODO [Projects] Write about printing documents in an old printer
* TODO [Projects] Write about Nubox integration
  - Explain the idea behind the library
  - Show the code by giving the GitHub Repo
* TODO [Blog] Core language, Second language
  - Functional Language, Concurrent Oriented Language
  - Ticket dispenser (Data Type vs Processes in Erlang)
    - http://erlang.org/pipermail/erlang-questions/2004-August/012905.html
    - http://erlang.org/pipermail/erlang-questions/2004-August/012914.html
    - http://erlang.org/pipermail/erlang-questions/2004-August/012928.html
    - http://erlang.org/pipermail/erlang-questions/2004-August/012932.html
    - http://erlang.org/workshop/2004/jaynelson.pdf
* TODO [Blog] Idempotence to the rescue
  https://pdfs.semanticscholar.org/4b6d/da7fe75b51e1c543a87ca7b3b322fbf55614.pdf
* TODO [Blog] Happiest thought in a long time
  - I don't need to be attending school to keep learning stuff
* TODO Updating your data:  How Does That could Affect Down Stream Systems?
* TODO Write about my thesis
* TODO Write about extending ABC compiler?
** https://svn.sable.mcgill.ca/abc/trunk/aop/abc-ja-exts/src-jpi/abc/ja/jpi/jrag/
** https://svn.sable.mcgill.ca/abc/trunk/aop/abc-testing/ajc-harness/tests/abctests/jpi/
* TODO How Do you communicate with the rest of your team
  - Prepare myself
  - Communicate my ideas by using:
    - Documents
    - Whiteboard
    - A diagram
  - Ask for help
  - Let your colleague that you need her for a fixed amount of time to do X
* TODO single threaded vs concurrency vs parallelism
* TODO what you know, what you know you don't know, what you don't know you don't know
* TODO Nobody trains software developers to be prepared for disasters.  That's why I love Erlang.
* TODO What are the things you do when creating a ruby console?
** ActiveRecord::Base.logger.level = 1
** conf.echo = false
* TODO Functional Programming First Principles
** https://www.youtube.com/watch?v=a-RAltgH8tw
** Functional Programming is all about functions
** Mutation is needed
** Composition between functions
** An interface is needed!
* TODO Interface-based design
** https://www.youtube.com/watch?v=JMP6gI5mLHc
** Joachim ??
** Programming against an interface
** Category, Objects, Morphisms, Exponentials, Functor
** Category: Programming Language
** Objects: Types
** Morphisms: Static Methods
** Category Theory == Interface-based Modelling
** Objects does not represent real objects
* TODO Programming and Scaling (video)
** https://www.youtube.com/watch?v=YyIQKBzIuBY
** Bob Barton
*** A new approach to the functional design of a digital computer
** What's science? It's a representation of
** Problem Oriented Language
* TODO Poolmachine
  - https://github.com/minostro/poolmachine
  - https://github.com/minostro/poolmachine_example
* TODO Work on this for a bit:
  - https://booking.riddles.io/
* TODO Design a Train System in ELF
* TODO Talk about RemuneX
* TODO bus-lines-admin - Django Project
